--- a/COMMANDS.txt
+++ b/COMMANDS.txt
@@ -18,23 +18,35 @@
 
 ### Command lines for building the region-specific subset OTFs
 ### Executed in {ExtraLight,Light,Normal,Regular,Medium,Bold,Heavy}
+for d in "${S}"/{ExtraLight,Light,Normal,Regular,Medium,Bold,Heavy}; do
 
 # Simplified Chinese
 
+if use font_types_otf; then
+if use l10n_zh-CN; then cd "${d}" && \
 makeotf -f cidfont.ps.CN -ff features.CN -fi cidfontinfo.CN -mf ../FontMenuNameDB.SUBSET -r -nS -cs 25 -ch ../UniSourceHanSansCN-UTF32-H
+[[ $? -eq 0 ]] || die; fi
 
 # Traditional Chinese (TW)
 
+if use l10n_zh-TW; then cd "${d}" && \
 makeotf -f cidfont.ps.TW -ff features.TW -fi cidfontinfo.TW -mf ../FontMenuNameDB.SUBSET -r -nS -cs 2 -ch ../UniSourceHanSansTW-UTF32-H -ci ../SourceHanSans_TWHK_sequences.txt
+[[ $? -eq 0 ]] || die; fi
 
 # Japanese
 
+if use l10n_ja; then cd "${d}" && \
 makeotf -f cidfont.ps.JP -ff features.JP -fi cidfontinfo.JP -mf ../FontMenuNameDB.SUBSET -r -nS -cs 1 -ch ../UniSourceHanSansJP-UTF32-H -ci ../SourceHanSans_JP_sequences.txt
+[[ $? -eq 0 ]] || die; fi
 
 # Korean
 
+if use l10n_ko; then cd "${d}" && \
 makeotf -f cidfont.ps.KR -ff features.KR -fi cidfontinfo.KR -mf ../FontMenuNameDB.SUBSET -r -nS -cs 3 -ch ../UniSourceHanSansKR-UTF32-H -ci ../SourceHanSans_KR_sequences.txt
+[[ $? -eq 0 ]] || die; fi
+find -type f -name "${MY_PN}*-*.otf" -exec mv {} "${S}" \;
 
+if false; then
 ### Command lines for building alternate style-linked region-specific subset OTFs
 ### Executed in Regular
 
@@ -76,20 +88,28 @@ makeotf -f cidfont.ps.KR -ff features.KR -fi cidfontinfo.KR.SL -mf ../FontMenuNa
 ### Executed in {ExtraLight,Light,Normal,Regular,Medium,Bold,Heavy}/OTC
 
 # Simplified Chinese
+fi
+elif use font_types_ttc; then
+cd "${d}"/OTC
 
 makeotf -f cidfont.ps.OTC.SC -ff features.OTC.SC -fi cidfontinfo.OTC.SC -mf ../../FontMenuNameDB -r -nS -cs 25 -ch ../../UniSourceHanSansCN-UTF32-H
+[[ $? -eq 0 ]] || die
 
 # Traditional Chinese (TW)
 
 makeotf -f cidfont.ps.OTC.TC -ff features.OTC.TC -fi cidfontinfo.OTC.TC -mf ../../FontMenuNameDB -r -nS -cs 2 -ch ../../UniSourceHanSansTW-UTF32-H -ci ../../SourceHanSans_TWHK_sequences.txt
+[[ $? -eq 0 ]] || die
 
 # Japanese
 
 makeotf -f cidfont.ps.OTC.J -ff features.OTC.J -fi cidfontinfo.OTC.J -mf ../../FontMenuNameDB -r -nS -cs 1 -ch ../../UniSourceHanSansJP-UTF32-H -ci ../../SourceHanSans_JP_sequences.txt
+[[ $? -eq 0 ]] || die
 
 # Korean
 
 makeotf -f cidfont.ps.OTC.K -ff features.OTC.K -fi cidfontinfo.OTC.K -mf ../../FontMenuNameDB -r -nS -cs 3 -ch ../../UniSourceHanSansKR-UTF32-H -ci ../../SourceHanSans_KR_sequences.txt
+[[ $? -eq 0 ]] || die
+if false; then
 
 ### Command lines for building alternate style-linked language-specific OTFs
 ### Executed in Regular/OTC
@@ -187,8 +207,15 @@ makeotf -f cidfont.ps.OTC.HW.K -ff features.OTC.K -fi cidfontinfo.OTC.HW.K.SL -m
 ### Command line for building the OTCs (replace $dir with the face name)
 ### Executed in {ExtraLight,Light,Normal,Medium,Heavy}/OTC
 
+fi
+dir=$(basename "${d}")
 otf2otc -t 'CFF '=0 -o SourceHanSans-$dir.ttc SourceHanSans-$dir.otf SourceHanSansK-$dir.otf SourceHanSansSC-$dir.otf SourceHanSansTC-$dir.otf
+[[ $? -eq 0 ]] || die
+mv -f ${MY_PN}-$dir.ttc "${S}"
+fi
+done
 
+return
 ### Executed in {Regular,Bold}/OTC
 
 otf2otc -t 'CFF '=0 -o SourceHanSans-$dir.ttc SourceHanSans-$dir.otf SourceHanSansK-$dir.otf SourceHanSansSC-$dir.otf SourceHanSansTC-$dir.otf SourceHanSansHW-$dir.otf SourceHanSansHWK-$dir.otf SourceHanSansHWSC-$dir.otf SourceHanSansHWTC-$dir.otf
