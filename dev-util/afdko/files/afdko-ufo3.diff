--- a/afdko/Tools/Programs/public/lib/source/ufowrite/ufowrite.c
+++ b/afdko/Tools/Programs/public/lib/source/ufowrite/ufowrite.c
@@ -561,7 +561,7 @@ static void writeMetaInfo(ufwCtx h)
     writeLine(h, "\t<key>creator</key>");
     writeLine(h, "\t<string>com.adobe.type.tx</string>");
     writeLine(h, "\t<key>formatVersion</key>");
-    writeLine(h, "\t<integer>2</integer>");
+    writeLine(h, "\t<integer>3</integer>");
     writeLine(h, "</dict>");
     writeLine(h, "</plist>");
     
--- a/afdko/Tools/SharedData/FDKScripts/CheckOutlinesUFO.py
+++ b/afdko/Tools/SharedData/FDKScripts/CheckOutlinesUFO.py
@@ -115,7 +115,7 @@ class FontFile(object):
         self.defcon_font = None
         self.use_hash_map = False
         self.ufo_font_hash_data = None
-        self.ufo_format = 2
+        self.ufo_format = 3
         self.save_to_default_layer = False
 
     def open(self, use_hash_map):
@@ -199,7 +199,7 @@ class FontFile(object):
         that the glif files will be set to format 1.
         """
         from ufoLib import UFOWriter
-        writer = UFOWriter(self.defcon_font.path, formatVersion=2)
+        writer = UFOWriter(self.defcon_font.path, formatVersion=3)
         if self.save_to_default_layer:
             self.defcon_font.save()
         else:
@@ -211,7 +211,7 @@ class FontFile(object):
             glyph_set = writer.getGlyphSet(
                 layerName=PROCD_GLYPHS_LAYER_NAME, defaultLayer=False)
             writer.writeLayerContents(layers.layerOrder)
-            glyph_set.ufoFormatVersion = 2
+            glyph_set.ufoFormatVersion = 3
             layer.save(glyph_set)
             layer.dirty = False
 
--- a/afdko/Tools/SharedData/FDKScripts/makeInstancesUFO.py
+++ b/afdko/Tools/SharedData/FDKScripts/makeInstancesUFO.py
@@ -396,7 +396,7 @@ def run(args):
 	if not dsPath:
 		return
 
-	version = 2
+	version = 3
 	if len(newInstancesList) == 1:
 		logMsg.log("Building 1 instance...")
 	else:
