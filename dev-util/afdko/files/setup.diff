--- a/setup.py
+++ b/setup.py
@@ -10,7 +10,7 @@ from distutils.util import get_platform
 
 import setuptools.command.install
 
-from skbuild import setup
+from setuptools import setup
 
 try:
     from wheel.bdist_wheel import bdist_wheel
@@ -30,7 +30,6 @@ try:
 except ImportError:
     print("afdko: setup.py requires that the Python package 'wheel' be "
           "installed. Try the command 'pip install wheel'.")
-    sys.exit(1)
 
 
 class InstallPlatlib(setuptools.command.install.install):
@@ -194,23 +193,18 @@ def main():
           zip_safe=False,
           python_requires='>=3.6',
           setup_requires=[
-              'wheel',
               'setuptools_scm',
-              'scikit-build',
-              'cmake',
-              'ninja'
           ],
           tests_require=[
               'pytest',
           ],
           install_requires=_get_requirements(),
-          scripts=_get_scripts(),
+          data_files=[("bin",_get_scripts())],
           entry_points={
               'console_scripts': _get_console_scripts(),
           },
           cmdclass={
               'build_scripts': CustomBuildScripts,
-              'bdist_wheel': CustomBDistWheel,
               'install': InstallPlatlib,
           },
           )
--- a/cmake/ExternalAntlr4Cpp.cmake
+++ b/cmake/ExternalAntlr4Cpp.cmake
@@ -132,10 +132,10 @@ ExternalProject_Add_Step(
     WORKING_DIRECTORY ${ANTLR4_BUILD_DIR})
 ExternalProject_Add_StepTargets(antlr4_runtime build_static)
 
-add_library(antlr4_static STATIC IMPORTED)
+add_library(antlr4_static SHARED IMPORTED)
 add_dependencies(antlr4_static antlr4_runtime-build_static)
 set_target_properties(antlr4_static PROPERTIES
-                      IMPORTED_LOCATION ${ANTLR4_STATIC_LIBRARIES})
+                      IMPORTED_LOCATION ${ANTLR4_LIBRARIES})
 
 ExternalProject_Add_Step(
     antlr4_runtime
