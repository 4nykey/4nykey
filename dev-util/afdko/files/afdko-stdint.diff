--- a/FDK/Tools/Programs/public/lib/api/ctlshare.h
+++ b/FDK/Tools/Programs/public/lib/api/ctlshare.h
@@ -12,6 +12,7 @@ This software is licensed as OpenSource, under the Apache License, Version 2.0.
 #else
 #include <stddef.h>     /* For size_t and NULL */
 #endif
+#include <stdint.h>
 
 /* CoreType Library Shared Definitions
    ===================================
--- a/FDK/Tools/Programs/public/lib/source/pstoken/pstoken.c
+++ b/FDK/Tools/Programs/public/lib/source/pstoken/pstoken.c
@@ -984,7 +984,7 @@ int pstFindToken(pstCtx h, pstToken *token, char *value)
 	}
 
 /* Convert integer token to integer value. */
-long pstConvInteger(pstCtx h, pstToken *token)
+int32_t pstConvInteger(pstCtx h, pstToken *token)
 	{
 	int base = 10;
 	long value = 0;
@@ -1053,7 +1053,7 @@ char *pstConvLiteral(pstCtx h, pstToken *token, long *length)
 /* Convert hexadecimal string to integer value. Only hexadecimal strings of
    eight digits or fewer may be converted by this function. Longer strings are
    likely to cause undiagnosed overflow on certain platforms. */
-unsigned long pstConvHexString(pstCtx h, pstToken *token)
+uint32_t pstConvHexString(pstCtx h, pstToken *token)
 	{
 	char *p = token->value + 1;
 	int digits = 0;
--- a/FDK/Tools/Programs/spot/source/cffread.c
+++ b/FDK/Tools/Programs/spot/source/cffread.c
@@ -10,6 +10,7 @@ This software is licensed as OpenSource, under the Apache License, Version 2.0.
 #include <limits.h>
 #include <math.h>
 #include <stdio.h>
+#include <stdint.h>
 
 #include "spot.h"
 
