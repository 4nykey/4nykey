Index: common/mp4ff/mp4atom.c
===================================================================
RCS file: /cvsroot/faac/faad2/common/mp4ff/mp4atom.c,v
retrieving revision 1.22
diff -u -r1.22 mp4atom.c
--- common/mp4ff/mp4atom.c	1 Feb 2005 13:15:55 -0000	1.22
+++ common/mp4ff/mp4atom.c	27 Jul 2005 14:23:10 -0000
@@ -46,15 +46,15 @@
 #include "drms.h"
 
 /* parse atom header size */
-static int32_t mp4ff_atom_get_size(const int8_t *data)
+static int32_t mp4ff_atom_get_size(const uint8_t *data)
 {
     uint32_t result;
     uint32_t a, b, c, d;
 
-    a = (uint8_t)data[0];
-    b = (uint8_t)data[1];
-    c = (uint8_t)data[2];
-    d = (uint8_t)data[3];
+    a = data[0];
+    b = data[1];
+    c = data[2];
+    d = data[3];
 
     result = (a<<24) | (b<<16) | (c<<8) | d;
     //if (result > 0 && result < 8) result = 8;
@@ -201,7 +201,7 @@
 {
     uint64_t size;
     int32_t ret;
-    int8_t atom_header[8];
+    uint8_t atom_header[8];
 
     ret = mp4ff_read_data(f, atom_header, 8);
     if (ret != 8)
Index: common/mp4ff/mp4ffint.h
===================================================================
RCS file: /cvsroot/faac/faad2/common/mp4ff/mp4ffint.h,v
retrieving revision 1.19
diff -u -r1.19 mp4ffint.h
--- common/mp4ff/mp4ffint.h	1 Feb 2005 13:15:55 -0000	1.19
+++ common/mp4ff/mp4ffint.h	27 Jul 2005 14:23:18 -0000
@@ -272,8 +272,8 @@
 
 
 /* mp4util.c */
-int32_t mp4ff_read_data(mp4ff_t *f, int8_t *data, uint32_t size);
-int32_t mp4ff_write_data(mp4ff_t *f, int8_t *data, uint32_t size);
+int32_t mp4ff_read_data(mp4ff_t *f, uint8_t *data, uint32_t size);
+int32_t mp4ff_write_data(mp4ff_t *f, uint8_t *data, uint32_t size);
 uint64_t mp4ff_read_int64(mp4ff_t *f);
 uint32_t mp4ff_read_int32(mp4ff_t *f);
 uint32_t mp4ff_read_int24(mp4ff_t *f);
@@ -287,7 +287,7 @@
 char * mp4ff_read_string(mp4ff_t * f,uint32_t length);
 
 /* mp4atom.c */
-static int32_t mp4ff_atom_get_size(const int8_t *data);
+static int32_t mp4ff_atom_get_size(const uint8_t *data);
 static int32_t mp4ff_atom_compare(const int8_t a1, const int8_t b1, const int8_t c1, const int8_t d1,
                                   const int8_t a2, const int8_t b2, const int8_t c2, const int8_t d2);
 static uint8_t mp4ff_atom_name_to_type(const int8_t a, const int8_t b, const int8_t c, const int8_t d);
@@ -347,7 +347,6 @@
 mp4ff_t *mp4ff_open_edit(mp4ff_callback_t *f);
 #endif
 void mp4ff_close(mp4ff_t *ff);
-void mp4ff_track_add(mp4ff_t *f);
 int32_t parse_sub_atoms(mp4ff_t *f, const uint64_t total_size,int meta_only);
 int32_t parse_atoms(mp4ff_t *f,int meta_only);
 
Index: common/mp4ff/mp4tagupdate.c
===================================================================
RCS file: /cvsroot/faac/faad2/common/mp4ff/mp4tagupdate.c,v
retrieving revision 1.5
diff -u -r1.5 mp4tagupdate.c
--- common/mp4ff/mp4tagupdate.c	1 Feb 2005 13:15:55 -0000	1.5
+++ common/mp4ff/mp4tagupdate.c	27 Jul 2005 14:23:24 -0000
@@ -143,7 +143,7 @@
 	bufptr = membuffer_get_ptr(buf);
 	if (bufptr==0) return 0;
 	
-	if ((unsigned)mp4ff_read_data(src,(char*)bufptr + oldsize,bytes)!=bytes)
+	if ((unsigned)mp4ff_read_data(src,(uint8_t*)bufptr + oldsize,bytes)!=bytes)
 	{
 		membuffer_set_error(buf);
 		return 0;
@@ -398,7 +398,7 @@
 	uint64_t atom_offset = base;
 	for(;;)
 	{
-		char atom_name[4];
+		uint8_t atom_name[4];
 		uint32_t atom_size;
 
 		mp4ff_set_position(f,atom_offset);
@@ -618,7 +618,7 @@
     /* copy moov atom to end of the file */
     if (ff->last_atom != ATOM_MOOV)
     {
-        char *free_data = "free";
+        uint8_t *free_data = (uint8_t*)"free";
 
         /* rename old moov to free */
         mp4ff_set_position(ff, ff->moov_offset + 4);
@@ -626,14 +626,14 @@
 	
         mp4ff_set_position(ff, ff->file_size);
 		mp4ff_write_int32(ff,new_moov_size + 8);
-		mp4ff_write_data(ff,"moov",4);
+		mp4ff_write_data(ff,(uint8_t*)"moov",4);
 		mp4ff_write_data(ff, new_moov_data, new_moov_size);
     }
 	else
 	{
         mp4ff_set_position(ff, ff->moov_offset);
 		mp4ff_write_int32(ff,new_moov_size + 8);
-		mp4ff_write_data(ff,"moov",4);
+		mp4ff_write_data(ff,(uint8_t*)"moov",4);
 		mp4ff_write_data(ff, new_moov_data, new_moov_size);
 	}
 
Index: common/mp4ff/mp4util.c
===================================================================
RCS file: /cvsroot/faac/faad2/common/mp4ff/mp4util.c,v
retrieving revision 1.17
diff -u -r1.17 mp4util.c
--- common/mp4ff/mp4util.c	1 Feb 2005 13:15:55 -0000	1.17
+++ common/mp4ff/mp4util.c	27 Jul 2005 14:23:25 -0000
@@ -28,7 +28,7 @@
 #include "mp4ffint.h"
 #include <stdlib.h>
 
-int32_t mp4ff_read_data(mp4ff_t *f, int8_t *data, uint32_t size)
+int32_t mp4ff_read_data(mp4ff_t *f, uint8_t *data, uint32_t size)
 {
     int32_t result = 1;
 
@@ -44,7 +44,7 @@
 	return f->stream->truncate(f->stream->user_data);
 }
 
-int32_t mp4ff_write_data(mp4ff_t *f, int8_t *data, uint32_t size)
+int32_t mp4ff_write_data(mp4ff_t *f, uint8_t *data, uint32_t size)
 {
     int32_t result = 1;
 
@@ -105,13 +105,13 @@
 {
     uint32_t result;
     uint32_t a, b, c, d;
-    int8_t data[4];
+    uint8_t data[4];
     
     mp4ff_read_data(f, data, 4);
-    a = (uint8_t)data[0];
-    b = (uint8_t)data[1];
-    c = (uint8_t)data[2];
-    d = (uint8_t)data[3];
+    a = data[0];
+    b = data[1];
+    c = data[2];
+    d = data[3];
 
     result = (a<<24) | (b<<16) | (c<<8) | d;
     return (uint32_t)result;
@@ -121,12 +121,12 @@
 {
     uint32_t result;
     uint32_t a, b, c;
-    int8_t data[4];
+    uint8_t data[4];
     
     mp4ff_read_data(f, data, 3);
-    a = (uint8_t)data[0];
-    b = (uint8_t)data[1];
-    c = (uint8_t)data[2];
+    a = data[0];
+    b = data[1];
+    c = data[2];
 
     result = (a<<16) | (b<<8) | c;
     return (uint32_t)result;
@@ -136,11 +136,11 @@
 {
     uint32_t result;
     uint32_t a, b;
-    int8_t data[2];
+    uint8_t data[2];
     
     mp4ff_read_data(f, data, 2);
-    a = (uint8_t)data[0];
-    b = (uint8_t)data[1];
+    a = data[0];
+    b = data[1];
 
     result = (a<<8) | b;
     return (uint16_t)result;
@@ -151,7 +151,7 @@
 	char * str = (char*)malloc(length + 1);
 	if (str!=0)
 	{
-		if ((uint32_t)mp4ff_read_data(f,str,length)!=length)
+		if ((uint32_t)mp4ff_read_data(f,(uint8_t*)str,length)!=length)
 		{
 			free(str);
 			str = 0;
Index: frontend/main.c
===================================================================
RCS file: /cvsroot/faac/faad2/frontend/main.c,v
retrieving revision 1.77
diff -u -r1.77 main.c
--- frontend/main.c	1 Feb 2005 13:15:56 -0000	1.77
+++ frontend/main.c	27 Jul 2005 14:23:34 -0000
@@ -41,7 +41,9 @@
 #include <fcntl.h>
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 #include <getopt.h>
+#include <stdarg.h>
 
 #include <neaacdec.h>
 #include <mp4ff.h>
@@ -400,8 +402,8 @@
                   float *song_length)
 {
     int tagsize;
-    unsigned long samplerate;
-    unsigned char channels;
+    uint32_t samplerate;
+    uint8_t channels;
     void *sample_buffer;
 
     audio_file *aufile;
@@ -679,7 +681,7 @@
     for (i = 0; i < numTracks; i++)
     {
         unsigned char *buff = NULL;
-        int buff_size = 0;
+        uint32_t buff_size = 0;
         mp4AudioSpecificConfig mp4ASC;
 
         mp4ff_get_decoder_config(infile, i, &buff, &buff_size);
@@ -710,8 +712,8 @@
                   int infoOnly, int adts_out, float *song_length)
 {
     int track;
-    unsigned long samplerate;
-    unsigned char channels;
+    uint32_t samplerate;
+    uint8_t channels;
     void *sample_buffer;
 
     mp4ff_t *infile;
@@ -730,7 +732,7 @@
     mp4AudioSpecificConfig mp4ASC;
 
     unsigned char *buffer;
-    int buffer_size;
+    uint32_t buffer_size;
 
     char percents[200];
     int percent, old_percent = -1;
