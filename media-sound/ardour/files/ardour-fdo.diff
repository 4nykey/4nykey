--- ./gtk2_ardour/SConscript.orig	2008-04-10 00:17:02.000000000 +0300
+++ ./gtk2_ardour/SConscript	2008-07-01 20:42:38.000000000 +0300
@@ -499,14 +499,10 @@
 	env.Alias('install', env.InstallAs(os.path.join(desktop_icon_install_prefix, '22x22', 'mimetypes', 'application-x-ardour2.png'), 'icons/application-x-ardour_22px.png'))
 	env.Alias('install', env.InstallAs(os.path.join(desktop_icon_install_prefix, '32x32', 'mimetypes', 'application-x-ardour2.png'), 'icons/application-x-ardour_32px.png'))
 	env.Alias('install', env.InstallAs(os.path.join(desktop_icon_install_prefix, '48x48', 'mimetypes', 'application-x-ardour2.png'), 'icons/application-x-ardour_48px.png'))
-	env.Alias('install', env.Command (os.path.join(install_prefix, 'share', 'mime'), [], 'update-mime-database $TARGET'))
 	# Update the icon cache #
-	env.Alias('install', env.Command (desktop_icon_install_prefix, [], 'touch --no-create $TARGET'))
-	env.Alias('install', env.Command (desktop_icon_install_prefix, [], 'gtk-update-icon-cache $TARGET'))
 	# Make the ardour2.desktop file and install it #
 	env.Alias('install', env.Command ('ardour2.desktop', 'ardour2.desktop.in', 'cat $SOURCES  > $TARGET'))
 	env.Alias('install', env.Install(os.path.join(install_prefix, 'share', 'applications'), 'ardour2.desktop'))
-	env.Alias('install', env.Command (os.path.join(install_prefix, 'share', 'applications'), [], 'update-desktop-database $TARGET'))
 	# uninstall target.. needed to run  update-mime-database and update-desktop-database after removal. #`
 	remove_desktop_files = env.Command ('another_frobnicatory_decoy', [],
                              [ Delete (install_prefix + '/share/mime/packages/ardour2.xml'),
