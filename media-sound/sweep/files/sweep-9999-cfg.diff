Index: configure.ac
===================================================================
--- configure.ac	(revision 702)
+++ configure.ac	(working copy)
@@ -39,7 +39,7 @@
 ac_enable_experimental=no
 AC_ARG_ENABLE(experimental,
      [  --enable-experimental   enable building of experimental code ],
-     [ ac_enable_experimental=yes ])
+     [ ac_enable_experimental=$enableval ])
 
 if test "x${ac_enable_experimental}" = xyes ; then
     AC_DEFINE([DEVEL_CODE], [], [Whether to build the develpment code.])
@@ -141,12 +141,12 @@
 ac_enable_oggvorbis=yes
 AC_ARG_ENABLE(oggvorbis,
      [  --disable-oggvorbis     disable Ogg Vorbis support],
-     [ ac_enable_oggvorbis=no ], [ ac_enable_oggvorbis=yes ])
+     [ ac_enable_oggvorbis=$enableval ], [ ac_enable_oggvorbis=yes ])
 
 ac_enable_speex=yes
 AC_ARG_ENABLE(speex,
      [  --disable-speex         disable Speex support],
-     [ ac_enable_speex=no ], [ ac_enable_speex=yes ])
+     [ ac_enable_speex=$enableval ], [ ac_enable_speex=yes ])
 
 dnl Both Vorbis and Speex require Ogg, so check for it first either way
 if test "x${ac_enable_oggvorbis}" != xno ||
@@ -278,7 +278,7 @@
 ac_enable_mad=yes
 AC_ARG_ENABLE(mad,
      [  --disable-mad           disable libmad (MPEG audio loading) support],
-     [ ac_enable_mad=no ], [ ac_enable_mad=yes ])
+     [ ac_enable_mad=$enableval ], [ ac_enable_mad=yes ])
 
 if test "x${ac_enable_mad}" != xno ; then
   AC_CHECK_LIB(mad, mad_decoder_init, HAVE_MAD="maybe")
@@ -305,7 +305,7 @@
 ac_enable_src=yes
 AC_ARG_ENABLE(src,
      [  --disable-src           enable secret rabbit code (libsamplerate)],
-     [ ac_enable_src=no ], [ ac_enable_src=yes])
+     [ ac_enable_src=$enableval ], [ ac_enable_src=yes])
 
 if test "x${ac_enable_src}" != xno ; then
   PKG_CHECK_MODULES(SAMPLERATE, samplerate >= 0.0.9,
@@ -328,17 +328,17 @@
 ac_enable_pulseaudio=yes
 AC_ARG_ENABLE(pulseaudio,
      AC_HELP_STRING([--disable-pulseaudio],[Disable PulseAudio driver]),
-     [ ac_enable_pulseaudio=no ])
+     [ ac_enable_pulseaudio=$enableval ])
 
 ac_enable_alsa=yes
 AC_ARG_ENABLE(alsa,
      AC_HELP_STRING([--disable-alsa],[Disable ALSA driver]),
-     [ ac_enable_alsa=no ])
+     [ ac_enable_alsa=$enableval ])
 
 ac_enable_oss=yes
 AC_ARG_ENABLE(oss,
      AC_HELP_STRING([--disable-oss],[Disable OSS driver]),
-     [ ac_enable_oss=no ])
+     [ ac_enable_oss=$enableval ])
 
 if test "x${ac_enable_pulseaudio}" != xno ; then
   PKG_CHECK_MODULES(PULSEAUDIO, libpulse-simple >= 0.9.10, HAVE_PULSEAUDIO="yes", sweep_config_ok="no")
@@ -357,7 +357,7 @@
   AC_SUBST(ALSA_LIBS)
   AC_DEFINE([DRIVER_ALSA], [], [Define if we have and want alsa.]) 
   if test "x$HAVE_ALSA" == xyes ; then
-    AC_CHECK_LIB(asound, snd_seq_open, HAVE_ALSA="maybe", sweep_config_ok="no")
+    AC_CHECK_LIB(asound, snd_seq_open, HAVE_ALSA="yes", sweep_config_ok="no")
     sweep_config_driver="$sweep_config_driver ALSA"
     fi	
   fi
