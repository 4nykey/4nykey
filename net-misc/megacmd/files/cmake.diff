--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -24,9 +24,8 @@ set(QT_CREATOR_SKIP_VCPKG_SETUP TRUE CAC
 
 ## Modules location
 list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/build/cmake/modules) # Modules from MEGAcmd
-list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/sdk/cmake/modules) # Modules from MEGAsdk
+list(APPEND CMAKE_MODULE_PATH ${CMAKE_INSTALL_PREFIX}/share/mega/cmake) # Modules from MEGAsdk
 
-set(VCPKG_ROOT "${CMAKE_CURRENT_LIST_DIR}/../vcpkg" CACHE PATH "If set, it will build and use the VCPKG packages defined in the manifest file")
 
 include(detect_host_architecture)
 
@@ -39,7 +38,7 @@ execute_process(
 )
 endif()
 
-if((NOT WIN32 OR BASH_VERSION_RESULT EQUAL 0) AND NOT EXISTS ${VCPKG_ROOT})
+if(FALSE)
     message(STATUS "vcpkg will be cloned into ${VCPKG_ROOT}")
     execute_process(
         #TODO: have the same for windows ... or at least check if bash is available
@@ -134,8 +133,6 @@ if(UNIX AND NOT APPLE)
     # If CMAKE_INSTALL_PREFIX is not set, it will set rpath to /opt/....
     # Note: using cmake --install --prefix /some/prefix will not set rpath relative to that prefix
     # The above can be used for building packages: in which install dir is a path construction folder that will not be there in packages
-    set(CMAKE_INSTALL_LIBDIR "opt/megacmd/lib")
-    set(CMAKE_INSTALL_BINDIR "usr/bin") #override default "bin"
 
     if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
         message(STATUS "Overriding default CMAKE_INSTALL_PREFIX to /")
@@ -157,7 +154,7 @@ if(APPLE)
 endif()
 
 # Load SDK project to build sdk library
-add_subdirectory(sdk)
+find_package(sdklib REQUIRED)
 
 #LOAD MEGACMD modules:
 include(megacmd_configuration) ## Load global CMake configuration for the project
@@ -380,6 +377,10 @@ set_target_properties(mega-cmd-server  P
 endif()
 
 target_link_libraries(LMegacmdClient PUBLIC MEGA::SDKlib LMEGAcmdCommonUtils)
+pkg_check_modules(readline REQUIRED IMPORTED_TARGET readline)
+pkg_check_modules(pcrecpp REQUIRED IMPORTED_TARGET libpcrecpp)
+pkg_check_modules(zlib REQUIRED IMPORTED_TARGET zlib)
+target_link_libraries(LMEGAcmdCommonUtils PRIVATE PkgConfig::readline PkgConfig::pcrecpp PkgConfig::zlib)
 target_link_libraries(mega-exec LMegacmdClient)
 target_link_libraries(mega-cmd PUBLIC MEGA::SDKlib LMEGAcmdCommonUtils)
 target_link_libraries(mega-cmd-updater PUBLIC MEGA::SDKlib LMEGAcmdCommonUtils)
@@ -457,16 +458,10 @@ elseif(NOT WIN32)
         PATTERN "python" EXCLUDE
         PATTERN "win" EXCLUDE)
 
-    install(FILES "${CMAKE_CURRENT_LIST_DIR}/src/client/megacmd_completion.sh"
-        DESTINATION "etc/bash_completion.d"
-        )
 
     # generate 100-megacmd-inotify-limit.conf file and have it installed
     execute_process(COMMAND echo "fs.inotify.max_user_watches = 524288"
                 OUTPUT_FILE ${CMAKE_CURRENT_BINARY_DIR}/99-megacmd-inotify-limit.conf)
-    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/99-megacmd-inotify-limit.conf
-        DESTINATION "etc/sysctl.d"
-        )
 
     #Install vcpkg dynamic libraries in locations defined by GNUInstallDirs.
     if(CMAKE_BUILD_TYPE STREQUAL "Debug")
@@ -474,6 +469,7 @@ elseif(NOT WIN32)
     else()
         SET(vcpkg_lib_folder "${VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/lib/")
     endif()
+    if(FALSE)
     install(DIRECTORY "${vcpkg_lib_folder}"
             DESTINATION ${CMAKE_INSTALL_LIBDIR}
             FILES_MATCHING
@@ -481,4 +477,5 @@ elseif(NOT WIN32)
             PATTERN "*dylib*" #macOS
             PATTERN "manual-link" EXCLUDE
             PATTERN "pkgconfig" EXCLUDE)
+    endif()
 endif() #not WIN32
