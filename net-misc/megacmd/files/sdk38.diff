--- a/src/comunicationsmanagerfilesockets.cpp
+++ b/src/comunicationsmanagerfilesockets.cpp
@@ -142,7 +142,7 @@ int ComunicationsManagerFileSockets::initialize()
     MegaFileSystemAccess *fsAccess = new MegaFileSystemAccess();
     char csocketsFolder[34]; // enough to hold all numbers up to 64-bits
     sprintf(csocketsFolder, "/tmp/megaCMD_%d", getuid());
-    LocalPath socketsFolder = LocalPath::fromLocalname(csocketsFolder);
+    LocalPath socketsFolder = LocalPath::fromPlatformEncoded(csocketsFolder);
 
     fsAccess->setdefaultfolderpermissions(0700);
     fsAccess->rmdirlocal(socketsFolder);
--- a/src/listeners.cpp
+++ b/src/listeners.cpp
@@ -461,7 +461,7 @@ void MegaCmdListener::doOnRequestFinish(MegaApi* api, MegaRequest *request, Mega
                 sync_struct *oldsync = ((sync_struct*)( *itr ).second );
 
                 MegaNode * node = api->getNodeByHandle(oldsync->handle);
-                api->resumeSync(oldsync->localpath.c_str(), node, oldsync->fingerprint, new MegaCmdListenerFuncExecuter([g, oldsync, node](mega::MegaApi* api, mega::MegaRequest *request, mega::MegaError *e)
+                api->enableSync(oldsync->handle, new MegaCmdListenerFuncExecuter([g, oldsync, node](mega::MegaApi* api, mega::MegaRequest *request, mega::MegaError *e)
                 {
                     std::unique_ptr<char []>nodepath (api->getNodePath(node));
 
@@ -484,7 +484,7 @@ void MegaCmdListener::doOnRequestFinish(MegaApi* api, MegaRequest *request, Mega
                         LOG_err << "Failed to resume sync: " << oldsync->localpath << " to " << nodepath.get();
                     }
                     delete node;
-                }, true));
+                }));
             }
 #endif
             informProgressUpdate(PROGRESS_COMPLETE, request->getTotalBytes(), this->clientID, "Fetching nodes");
--- a/src/megacmdexecuter.cpp
+++ b/src/megacmdexecuter.cpp
@@ -1776,13 +1776,13 @@ bool MegaCmdExecuter::TestCanWriteOnContainingFolder(string *path)
 #ifdef _WIN32
     replaceAll(*path,"/","\\");
 #endif
-    string localpath;
-    fsAccessCMD->path2local(path, &localpath);
-    size_t lastpart = fsAccessCMD->lastpartlocal(&localpath);
+    LocalPath localpath = LocalPath::fromPlatformEncoded(*path);
+    size_t lastpart = localpath.getLeafnameByteIndex(*fsAccessCMD);
     string containingFolder = ".";
     if (lastpart)
     {
-        string firstpartlocal(localpath, 0, lastpart - fsAccessCMD->localseparator.size());
+        FileSystemType fstype = fsAccessCMD->client->fsaccess->getlocalfstype(localpath);
+        string firstpartlocal(localpath.toName(*fsAccessCMD, fstype), 0, lastpart - sizeof(LocalPath::localPathSeparator));
         fsAccessCMD->local2path(&firstpartlocal, &containingFolder);
     }
 
@@ -4363,7 +4363,7 @@ void MegaCmdExecuter::printSync(int i, string key, const char *nodepath, sync_st
         string syncstate = "REMOVED";
         if (msync)
         {
-            syncstate = getSyncStateStr(msync->getState());
+            syncstate = getSyncStateStr(msync->getError());
         }
 
         string statetoprint;
@@ -4413,7 +4413,7 @@ void MegaCmdExecuter::printSync(int i, string key, const char *nodepath, sync_st
     string syncstate = "REMOVED";
     if (msync)
     {
-        syncstate = getSyncStateStr(msync->getState());
+        syncstate = getSyncStateStr(msync->getError());
     }
 
     string statetoprint;
@@ -9572,7 +9572,7 @@ void MegaCmdExecuter::executecommand(vector<string> words, map<string, int> *clf
         }
         else
         {
-            api->logout(megaCmdListener);
+            api->logout(true, megaCmdListener);
         }
         actUponLogout(megaCmdListener, keepSession);
         if (keepSession)
--- a/src/megacmdutils.cpp
+++ b/src/megacmdutils.cpp
@@ -141,22 +141,22 @@ const char* getSyncStateStr(int state)
 {
     switch (state)
     {
-        case MegaSync::SYNC_FAILED:
+        case SYNC_FAILED:
             return "Failed";
 
             break;
 
-        case MegaSync::SYNC_CANCELED:
+        case SYNC_CANCELED:
             return "Canceled";
 
             break;
 
-        case MegaSync::SYNC_INITIALSCAN:
+        case SYNC_INITIALSCAN:
             return "InitScan";
 
             break;
 
-        case MegaSync::SYNC_ACTIVE:
+        case SYNC_ACTIVE:
             return "Active";
 
             break;
