--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -63,5 +63,3 @@ include(desktopapp_configuration)
 # Load the MEGA targets
 add_subdirectory(src)
 
-include(get_clang_format)
-get_clang_format()
--- a/contrib/cmake/modules/desktopapp_configuration.cmake
+++ b/contrib/cmake/modules/desktopapp_configuration.cmake
@@ -29,8 +29,6 @@ if(UNIX AND NOT APPLE)
     # Note: using cmake --install --prefix /some/prefix will keep the RPATH as configured above.
     #       Used for building packages: in which install dir is a path construction folder that will not be there in packages
 
-    set(CMAKE_INSTALL_LIBDIR "opt/megasync/lib") # override default "lib" from GNUInstallDirs
-    set(CMAKE_INSTALL_BINDIR "usr/bin") # override default "bin" from GNUInstallDirs
 
     # Override CMAKE_INSTALL_PREFIX
     if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT) # In consecutive runs it will always be undef/false
@@ -38,7 +36,6 @@ if(UNIX AND NOT APPLE)
         set(CMAKE_INSTALL_PREFIX "" CACHE PATH "" FORCE) # Set value in cache for consecutive runs
     endif()
 
-    list(APPEND CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
 
     message(STATUS "Current installation path for ${PROJECT_NAME} project: \"${CMAKE_INSTALL_PREFIX}\"")
 
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -3,7 +3,6 @@
 # Load MEGA Desktop app project
 
 if(ENABLE_DESKTOP_APP OR ENABLE_DESKTOP_UPDATE_GEN)
-    add_subdirectory(MEGASync/mega)
 endif()
 
 if(ENABLE_DESKTOP_APP)
--- a/src/MEGASync/CMakeLists.txt
+++ b/src/MEGASync/CMakeLists.txt
@@ -75,7 +75,7 @@ set_target_properties(MEGAsync
 )
 
 
-find_package(Qt5 REQUIRED COMPONENTS LinguistTools)
+find_package(Qt5LinguistTools REQUIRED)
 qt5_create_translation(QM_OUTPUT ${CMAKE_CURRENT_SOURCE_DIR} gui/translations/translation.source.ts
     OPTIONS -locations none -no-ui-lines -no-obsolete)
 
@@ -84,11 +84,10 @@ add_custom_target(generate_ts DEPENDS ${QM_OUTPUT})
 add_dependencies(MEGAsync generate_ts)
 
 target_include_directories(MEGAsync PRIVATE ${CMAKE_CURRENT_LIST_DIR}
-    ${CMAKE_CURRENT_LIST_DIR}/google_breakpad
+    ${CMAKE_CURRENT_LIST_DIR}/mega/bindings/qt
 )
 
 # Include modules in subdirectories with sources for Desktop App
-add_subdirectory(google_breakpad)
 
 include(control/control.cmake)
 include(gui/gui.cmake)
@@ -102,6 +101,7 @@ include(UserAttributesRequests/userattributesrequests.cmake)
 
 target_compile_definitions(MEGAsync
     PUBLIC
+    __STDC_FORMAT_MACROS
     QT_NO_CAST_FROM_ASCII QT_NO_CAST_TO_ASCII
     $<$<CONFIG:Debug>:LOG_TO_STDOUT LOG_TO_LOGGER CREATE_COMPATIBLE_MINIDUMPS>
     $<$<BOOL:${WIN32}>:PUBLIC NOMINMAX WIN32_LEAN_AND_MEAN UNICODE>
@@ -117,12 +117,15 @@ else()
 endif()
 
 find_package(Qt5 REQUIRED COMPONENTS Widgets Core Gui Network Qml Quick)
+find_package(sdklib REQUIRED)
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(breakpad REQUIRED IMPORTED_TARGET breakpad breakpad-client)
 message(STATUS "Building the MEGA Desktop App with Qt v${Qt5_VERSION} from ${Qt5_DIR}")
 
 target_link_libraries(MEGAsync
     PUBLIC
     MEGA::SDKlib
-    MEGA::SDKQtBindings
+    SDKQtBindings
     $<$<BOOL:${WIN32}>:Qt5::WinExtras>
     $<$<BOOL:${APPLE}>:Qt5::MacExtras>
     $<$<BOOL:${UNIX}>:Qt5::Svg>
@@ -132,7 +135,8 @@ target_link_libraries(MEGAsync
     Qt5::Network
     Qt5::Qml
     Qt5::Quick
-    MEGA::google_breakpad
+    PkgConfig::breakpad
+    z
 )
 
 ## Adjust compilation flags for warnings and errors ##
@@ -163,13 +167,6 @@ if (UNIX AND NOT APPLE)
 
     set(vcpkg_lib_folder "${VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/$<$<CONFIG:Debug>:debug/>lib/")
 
-    install(DIRECTORY "${vcpkg_lib_folder}"
-        TYPE LIB # In CMAKE_INSTALL_LIBDIR directory
-        FILES_MATCHING
-        PATTERN "*.so*"
-        PATTERN "manual-link" EXCLUDE
-        PATTERN "pkgconfig" EXCLUDE
-    )
 
     if(DEPLOY_QT_LIBRARIES)
         include(desktopapp_deploy_qt)
